{"ast":null,"code":"/*import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport \"../App.css\";\r\n\r\nconst ToDoListItem = () => {\r\n  //arrow declaration => expensive computation ex: API calls\r\n  const [items, setItems] = useState(() => toDoItems);\r\n\r\n  const [filterType, setFilterType] = useState(\"\");\r\n\r\n  const handleChangeItem = (event) => {\r\n    setItemToAdd(event.target.value);\r\n  };\r\n\r\n  const handleAddItem = () => {\r\n    // mutating !WRONG!\r\n    // const oldItems = items;\r\n    // oldItems.push({ label: itemToAdd, key: uuidv4() });\r\n    // setItems(oldItems);\r\n\r\n    // not mutating !CORRECT!\r\n    setItems((prevItems) => [\r\n      { label: itemToAdd, key: uuidv4() },\r\n      ...prevItems,\r\n    ]);\r\n\r\n    setItemToAdd(\"\");\r\n  };\r\n\r\n  const handleItemDone = ({ key }) => {\r\n    //first way\r\n    // const itemIndex = items.findIndex((item) => item.key === key);\r\n    // const oldItem = items[itemIndex];\r\n    // const newItem = { ...oldItem, done: !oldItem.done };\r\n    // const leftSideOfAnArray = items.slice(0, itemIndex);\r\n    // const rightSideOfAnArray = items.slice(itemIndex + 1, items.length);\r\n    // setItems([...leftSideOfAnArray, newItem, ...rightSideOfAnArray]);\r\n\r\n    //  second way\r\n    // const changedItem = items.map((item) => {\r\n    //   if (item.key === key) {\r\n    //     return { ...item, done: item.done ? false : true };\r\n    //   } else return item;\r\n    // });\r\n\r\n    //second way updated\r\n    setItems((prevItems) =>\r\n      prevItems.map((item) => {\r\n        if (item.key === key) {\r\n          return { ...item, done: !item.done };\r\n        } else return item;\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleImportant = ({ key }) => {\r\n    setItems((prevItems) =>\r\n      prevItems.map((item) => {\r\n        if (item.key === key) {\r\n          //console.log(item);\r\n          return {\r\n            ...item,\r\n            important: !item.important,\r\n          };\r\n        } else return item;\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleFilterItems = (type) => {\r\n    setFilterType(type);\r\n  };\r\n\r\n  const amountDone = items.filter((item) => item.done).length;\r\n\r\n  const amountLeft = items.length - amountDone;\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n  const handleSearch = (event) => {\r\n    setSearch(event.target.value);\r\n    setFilterType(event.target.value);\r\n  };\r\n\r\n  const handleDeleteItem = ({ key }) => {\r\n    setItems((prevItems) => prevItems.filter((item) => item.key !== key));\r\n    console.log(items);\r\n  };\r\n\r\n  const filteredItems =\r\n    !filterType || filterType === \"all\"\r\n      ? items\r\n      : filterType === \"active\"\r\n      ? items.filter((item) => !item.done)\r\n      : filterType === \"done\"\r\n      ? items.filter((item) => item.done)\r\n      : items.filter((item) => item.label.toLowerCase().startsWith(filterType));\r\n\r\n  return (\r\n    <div>\r\n      <li key={item.key} className=\"list-group-item\">\r\n        <span\r\n          className={`todo-list-item${item.done ? \" done\" : \"\"} todo-list-item${\r\n            item.important ? \" important\" : \"\"\r\n          }`}\r\n        >\r\n          <span\r\n            className=\"todo-list-item-label\"\r\n            onClick={() => handleItemDone(item)}\r\n          >\r\n            {item.label}\r\n          </span>\r\n\r\n          <button\r\n            onClick={() => handleImportant(item)}\r\n            type=\"button\"\r\n            className=\"btn btn-outline-success btn-sm float-right\"\r\n          >\r\n            <i className=\"fa fa-exclamation\" />\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => handleDeleteItem(item)}\r\n            type=\"button\"\r\n            className=\"btn btn-outline-danger btn-sm float-right\"\r\n          >\r\n            <i className=\"fa fa-trash-o\" />\r\n          </button>\r\n        </span>\r\n      </li>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToDoListItem;\r\n*/","map":{"version":3,"names":[],"sources":["D:/nfactorial/homework-todo/src/component/todolistitem.js"],"sourcesContent":["/*import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport \"../App.css\";\r\n\r\nconst ToDoListItem = () => {\r\n  //arrow declaration => expensive computation ex: API calls\r\n  const [items, setItems] = useState(() => toDoItems);\r\n\r\n  const [filterType, setFilterType] = useState(\"\");\r\n\r\n  const handleChangeItem = (event) => {\r\n    setItemToAdd(event.target.value);\r\n  };\r\n\r\n  const handleAddItem = () => {\r\n    // mutating !WRONG!\r\n    // const oldItems = items;\r\n    // oldItems.push({ label: itemToAdd, key: uuidv4() });\r\n    // setItems(oldItems);\r\n\r\n    // not mutating !CORRECT!\r\n    setItems((prevItems) => [\r\n      { label: itemToAdd, key: uuidv4() },\r\n      ...prevItems,\r\n    ]);\r\n\r\n    setItemToAdd(\"\");\r\n  };\r\n\r\n  const handleItemDone = ({ key }) => {\r\n    //first way\r\n    // const itemIndex = items.findIndex((item) => item.key === key);\r\n    // const oldItem = items[itemIndex];\r\n    // const newItem = { ...oldItem, done: !oldItem.done };\r\n    // const leftSideOfAnArray = items.slice(0, itemIndex);\r\n    // const rightSideOfAnArray = items.slice(itemIndex + 1, items.length);\r\n    // setItems([...leftSideOfAnArray, newItem, ...rightSideOfAnArray]);\r\n\r\n    //  second way\r\n    // const changedItem = items.map((item) => {\r\n    //   if (item.key === key) {\r\n    //     return { ...item, done: item.done ? false : true };\r\n    //   } else return item;\r\n    // });\r\n\r\n    //second way updated\r\n    setItems((prevItems) =>\r\n      prevItems.map((item) => {\r\n        if (item.key === key) {\r\n          return { ...item, done: !item.done };\r\n        } else return item;\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleImportant = ({ key }) => {\r\n    setItems((prevItems) =>\r\n      prevItems.map((item) => {\r\n        if (item.key === key) {\r\n          //console.log(item);\r\n          return {\r\n            ...item,\r\n            important: !item.important,\r\n          };\r\n        } else return item;\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleFilterItems = (type) => {\r\n    setFilterType(type);\r\n  };\r\n\r\n  const amountDone = items.filter((item) => item.done).length;\r\n\r\n  const amountLeft = items.length - amountDone;\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n  const handleSearch = (event) => {\r\n    setSearch(event.target.value);\r\n    setFilterType(event.target.value);\r\n  };\r\n\r\n  const handleDeleteItem = ({ key }) => {\r\n    setItems((prevItems) => prevItems.filter((item) => item.key !== key));\r\n    console.log(items);\r\n  };\r\n\r\n  const filteredItems =\r\n    !filterType || filterType === \"all\"\r\n      ? items\r\n      : filterType === \"active\"\r\n      ? items.filter((item) => !item.done)\r\n      : filterType === \"done\"\r\n      ? items.filter((item) => item.done)\r\n      : items.filter((item) => item.label.toLowerCase().startsWith(filterType));\r\n\r\n  return (\r\n    <div>\r\n      <li key={item.key} className=\"list-group-item\">\r\n        <span\r\n          className={`todo-list-item${item.done ? \" done\" : \"\"} todo-list-item${\r\n            item.important ? \" important\" : \"\"\r\n          }`}\r\n        >\r\n          <span\r\n            className=\"todo-list-item-label\"\r\n            onClick={() => handleItemDone(item)}\r\n          >\r\n            {item.label}\r\n          </span>\r\n\r\n          <button\r\n            onClick={() => handleImportant(item)}\r\n            type=\"button\"\r\n            className=\"btn btn-outline-success btn-sm float-right\"\r\n          >\r\n            <i className=\"fa fa-exclamation\" />\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => handleDeleteItem(item)}\r\n            type=\"button\"\r\n            className=\"btn btn-outline-danger btn-sm float-right\"\r\n          >\r\n            <i className=\"fa fa-trash-o\" />\r\n          </button>\r\n        </span>\r\n      </li>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToDoListItem;\r\n*/\r\n"],"mappings},"metadata":{},"sourceType":"module"}